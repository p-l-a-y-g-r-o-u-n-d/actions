name: docker

on:
  workflow_call:
    inputs:
      image-name:
        description: "Image name"
        required: true
        type: string
      registry-url:
        description: "Registry URL"
        required: true
        type: string
      registry-organization:
        description: "Organization or namespace within given registry"
        required: true
        type: string
      dockerfile:
        description: 'Dockerfile location'
        default: './Dockerfile'
        required: false
        type: string

jobs: 
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build and push
        run: |
          TIMESTAMP=$(date +"%Y-%m-%d-%H-%M-%S")
          REGISTRY_IMAGE="${{ inputs.registry-url }}/${{ inputs.registry-organization }}/${{ inputs.image-name }}"

          docker login -u ${{ github.actor }} -p ${{ secrets.GHCR_TOKEN }} ${{ inputs.registry-url }}

          echo "Using Dockerfile: ${{ inputs.dockerfile }}"
          docker build --build-arg BUILD_VERSION=${{github.run_number}} --build-arg BUILD_TIMESTAMP=${TIMESTAMP} -t ${{ inputs.image-name }} -f ${{ inputs.dockerfile }} .

          docker tag ${{ inputs.image-name }} ${REGISTRY_IMAGE}:latest
          docker tag ${{ inputs.image-name }} ${REGISTRY_IMAGE}:${{ github.sha }}
          docker tag ${{ inputs.image-name }} ${REGISTRY_IMAGE}:${{ github.run_number }}
          docker tag ${{ inputs.image-name }} ${REGISTRY_IMAGE}:${TIMESTAMP}

          docker push --all-tags ${REGISTRY_IMAGE}

  notify:
    name: Notify about new image version
    runs-on: ubuntu-latest
    needs: [docker]

    steps:
      - name: Transform input variables
        id: transform
        env:
          IMAGE_NAME: ${{ inputs.image-name }}
        run: |
          # Replace and lower case
          rpl=$(echo ${IMAGE_NAME//-/_} | tr '[:upper:]' '[:lower:'])
          echo "APPLICATION_NAME=$rpl" >> "$GITHUB_OUTPUT"
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.FLUX_REPO_TRIGGER_IMAGE_UPDATE }}
          repository: p-l-a-y-g-r-o-u-n-d/flux-testing
          event-type: image-version-update
          client-payload: '{"application_name": "${{ steps.transform.outputs.APPLICATION_NAME }}", "image_name": "${{ inputs.registry-url }}/${{ inputs.registry-organization }}/${{ inputs.image-name }}", "image_version": "${{ github.run_number }}", "user": "${{ github.actor }}"}'
